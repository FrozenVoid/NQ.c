The speed of algorithm depends 
on minimizing the update of collision
sums(swapc.h): all diagonal collisions are
stored in two arrays(DiagL/R) and each 
queen swap(x,y) (y,x) will 
update('swapc' function)
both collision counts for (x,y) (y,x) 
and the sums of DiagL/DiagR arrays,
without further calculation:
normally a loop through the arrays.

Functions/lin.h contains all search

endsearch: random cells are swapped with
fstgcols() collision cells until all collisions
reach 0.
  
